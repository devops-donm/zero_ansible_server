---
- name: Deploy Sample Django Project Container
  hosts: servers
  become: true

  vars:
    project_name: "sample_django_project"
    repo_url: "https://github.com/devops-donm/sample_django_project.git"
    project_path: "/opt/{{ project_name }}/"

  tasks:
    - name: Ensure project directory exists
      ansible.builtin.file:
        path: "{{ project_path }}"
        state: directory
        mode: '0755'

    - name: Create SQLite directory for persistence
      ansible.builtin.file:
        path: "/opt/docker_volume/{{ project_name }}/database/"
        state: directory
        mode: '0755'

    - name: Clone the Project Repository
      ansible.builtin.git:
        repo: "{{ repo_url }}"
        dest: "{{ project_path }}"
        version: main
        force: yes

    - name: Set executable permission for SSL generation script
      ansible.builtin.file:
        path: "{{ project_path }}/generate_ssl.sh"
        mode: '0755'
        state: file

    - name: Execute SSL generation script
      ansible.builtin.shell: "/opt/{{ project_name }}/generate_ssl.sh"
      args:
        chdir: "/opt/{{ project_name }}"
      register: ssl_output

    - name: Display script output
      ansible.builtin.debug:
        var: ssl_output.stdout

    - name: Copy the configuration file
      ansible.builtin.copy:
        src: "/opt/sample_django_project/test_local.conf"
        dest: "/opt/docker_volume/nginx/configs/test_local.conf"
        remote_src: yes
        owner: root
        group: root
        mode: '0644'

    - name: Stop existing Docker containers
      ansible.builtin.shell: "docker-compose down"
      args:
        chdir: "{{ project_path }}"
      ignore_errors: true

    - name: Build and start new Docker containers
      ansible.builtin.shell: "docker-compose up -d --build"
      args:
        chdir: "{{ project_path }}"

  handlers:
    - name: Restart Docker
      ansible.builtin.service:
        name: docker
        state: restarted
